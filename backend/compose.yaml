services:
  db:
    image: mysql:8.4
    environment:
      - MYSQL_DATABASE=fatecmeets
      - MYSQL_PASSWORD=secret
      - MYSQL_ROOT_PASSWORD=verysecret
      - MYSQL_USER=fatec
    volumes:
      - db_data:/var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -p$${MYSQL_ROOT_PASSWORD} || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10

  phpmyadmin:
    image: phpmyadmin:latest
    environment:
      - PMA_HOST=db
      - PMA_PORT=3306
      - UPLOAD_LIMIT=64M
    ports:
      - "8082:80"
    depends_on:
      - db

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - DB_HOST=db
      - DB_PORT=3306
      - DB_NAME=fatecmeets
      - DB_USERNAME=fatec
      - DB_PASSWORD=secret
      # E-mail (Gmail)
      - MAIL_HOST=smtp.gmail.com
      - MAIL_PORT=465
      - MAIL_USERNAME=fatecmeets@gmail.com
      - MAIL_PASSWORD=eximrybnuktaofwh
      - MAIL_SMTP_AUTH=true
      - MAIL_SMTP_TLS=false
      - MAIL_SMTP_SSL=true
      - MAIL_FROM_ADDRESS=fatecmeets@gmail.com
      - MAIL_FROM_NAME=Fatec Meets
      # OAuth2 Azure (opcional) â€” descomentear e preencher para habilitar
      # - SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_AZURE_CLIENT_ID=xxxxxxxx
      # - SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_AZURE_CLIENT_SECRET=xxxxxxxx
      # - SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_AZURE_SCOPE=openid,profile,email
      # - SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_AZURE_ISSUER_URI=https://login.microsoftonline.com/<TENANT_ID>/v2.0
    ports:
      - "8083:8080"   # TEMP: acesso direto ao backend para debug (bypassa Nginx)
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://127.0.0.1:8080/actuator/health | grep -q '\"status\":\"UP\"'"]
      interval: 10s
      timeout: 5s
      retries: 12
      start_period: 15s
    depends_on:
      db:
        condition: service_healthy

  web:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    ports:
      - "8080:80"
    depends_on:
      backend:
        condition: service_healthy

volumes:
  db_data:
